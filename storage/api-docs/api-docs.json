{
    "openapi": "3.0.0",
    "info": {
        "title": "API Travel Manager",
        "description": "API developed with Docker, Laravel Sail, MySQL and Laravel Sanctum to manage corporate travel requests.",
        "contact": {
            "email": "slpascoal01@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user and returns a token for authentication.",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Tester"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "tester@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error."
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login an existing user",
                "description": "Logs in a user with email and password and returns a token for authentication.",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "tester@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials."
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout the authenticated user",
                "description": "Logs out the authenticated user by deleting their tokens.",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "User logged out successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/travels": {
            "get": {
                "tags": [
                    "Travels"
                ],
                "summary": "Get a list of travels",
                "description": "Retrieve a list of travels, optionally filtered by status.",
                "operationId": "e6e28adefcaf8b1537bcebab1505fbd8",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter travels by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "requested",
                                "approved",
                                "canceled"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of travels",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Travel"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Travels"
                ],
                "summary": "Create a new travel request",
                "description": "Create a new travel request for the authenticated user.",
                "operationId": "9e3b1f79161c80eb0922acd543842cd8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "applicant_name",
                                    "destiny",
                                    "departure_date",
                                    "return_date",
                                    "status"
                                ],
                                "properties": {
                                    "applicant_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "destiny": {
                                        "type": "string",
                                        "example": "Paris"
                                    },
                                    "departure_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-15"
                                    },
                                    "return_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-20"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "requested",
                                            "approved",
                                            "canceled"
                                        ],
                                        "example": "requested"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Travel request created successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Travel"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "There is a trip for this person on the same date."
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/travels/{travel}": {
            "get": {
                "tags": [
                    "Travels"
                ],
                "summary": "Get a specific travel",
                "description": "Retrieve details of a specific travel request.",
                "operationId": "39c452246ff21b051ff838b218813b66",
                "parameters": [
                    {
                        "name": "travel",
                        "in": "path",
                        "description": "ID of the travel request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the travel request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Travel"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Travels"
                ],
                "summary": "Update a travel status",
                "description": "Update the status of an existing travel request.",
                "operationId": "a8cfea3360cf64fb5f4b94033a5c9e79",
                "parameters": [
                    {
                        "name": "travel",
                        "in": "path",
                        "description": "ID of the travel request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "requested",
                                            "approved",
                                            "canceled"
                                        ],
                                        "example": "approved"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Travel status updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "requested",
                                                "approved",
                                                "canceled"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Travels"
                ],
                "summary": "Delete a travel request",
                "description": "Delete a specific travel request.",
                "operationId": "401829b60fef7e9d449295eafbb1b4bf",
                "parameters": [
                    {
                        "name": "travel",
                        "in": "path",
                        "description": "ID of the travel request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Travel request deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "the travel was deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Travel": {
                "required": [
                    "applicant_name",
                    "destiny",
                    "departure_date",
                    "return_date",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "applicant_name": {
                        "type": "string",
                        "example": "Traveler"
                    },
                    "destiny": {
                        "type": "string",
                        "example": "Paris"
                    },
                    "departure_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-11-15"
                    },
                    "return_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-11-20"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "requested",
                            "approved",
                            "canceled"
                        ],
                        "example": "requested"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-09T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-09T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "id",
                    "name",
                    "email",
                    "created_at",
                    "updated_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Travel Salesperson"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "travel@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-09T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-09T00:00:00Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Travels"
        },
        {
            "name": "Auth",
            "description": "Auth"
        }
    ]
}